##
# @file
# Nginx configuration - server settings.
#
# Copyright © 2015, Ahmed Kamal. (https://github.com/ahmedkamals)
#
# This file is part of Ahmed Kamal's server configurations.
# ® Redistributions of files must retain the above copyright notice.
#
# @copyright     Ahmed Kamal (https://github.com/ahmedkamals)
# @link          https://github.com/ahmedkamals/dev-environment
# @package       AK
# @subpackage
# @version       1.0
# @since         2015-01-25 Happy day :)
# @license
# @author        Ahmed Kamal <me.ahmed.kamal@gmail.com>
# @modified      2015-01-25
#

## Only allow these request methods
if ($request_method !~ ^(GET|HEAD|POST)$ ) {

	return 444;
}

## Deny certain Referers (case insensitive)
## The ~* makes it case insensitive as opposed to just a ~
if ($http_referer ~* (babes|click|diamond|forsale|girl|jewelry|love|nudit|organic|poker|porn|poweroversoftware|sex|teen|video|webcam|zippo)) {

	return 444;
}

## Deny certain User-Agents (case insensitive)
## The ~* makes it case insensitive as opposed to just a ~
if ($http_user_agent ~* (Baiduspider|Jullo|LWP::Simple|BBBike|wget) ) {

	return 444;
}

error_page 518 = @blocked;

location @blocked {


}

location / {

	# If the current host is not in the follwing hosts, will be blocked.
	if ( $host !~* "(.*)local" ) {

		return 518;
  }

	# Static File Caching
	if ($request_filename ~* (?i)\.(csv|doc|docx|dot|dotx|epub|odm|odt|ott|pdf|rtf|txt|wps|wpt|eot|ttf|otf|woff|ai|bmp|eps|gif|icns|ico|jpeg|png|psd|psp|svg|aac|mp2|mp3|m4a|mp4|m4p|ra|rm|wav|wma|mid|m3u|m3u8|ts|pot|pps|ppt|pptx|mpp|gsheet|numbers|stc|sxc|xls|xlsb|xlsm|xlsx|xlr|xlt|xltm|xlw|3gp|asf|avi|dat|fla|flv|m1v|m2v|m4v|mov|mpeg|mpg|mpe|ogg|rm|swf|wmv|wml|css|js|htm|html|xhtml|xml|aac|bz2|gz|7z|rar|tar|tar.gz|tgz|tar.z|tar.bz2|tbz2|tar.lzma|zip|zipx)(\?[a-z0-9]+)?$) {

		# Defining root for static files, if exists:
		#root   /var/www/html/projects/ahmedkamal;
	  expires max;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
	}

	# Added to solve problem of serving fonts on Mozilla browser
	if ($request_filename ~* (?i)\.(eot|otf|svg|ttf|woff)(\?[a-z0-9]+)?$) {

  		add_header Access-Control-Allow-Origin *;
	}

	# Essentially the same as passing php requests back to apache.

	# This block will catch any requests with a .php extension
	# normally in this block data would be passed to a FastCGI process.

	# And now we pass back to varnish
	# if you're using a side-by-side configuration the IP can be changed to
	# apache's bound IP at port 8090 such as http://192.170.2.1:8090
	proxy_pass http://varnish;

	# This next line adds the Host header so that apache knows which vHost to serve
	# the $host variable is automatically set to the hostname Nginx is responding to.
	proxy_set_header Host $host;

	proxy_redirect off;

	# these four lines tell Apache the actual IP of the client being forwarded
	# Apache requires mod_proxy (http://bit.ly/mod_proxy) for these to work
	# Most Apache 2.0+ servers have mod_proxy configured already.
	proxy_set_header X-Real-IP  $remote_addr;
  proxy_set_header X-Forwarded-Host $http_host;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Server-Address $server_addr;

	proxy_connect_timeout   5s;
	proxy_send_timeout      90s;
	proxy_read_timeout      300s;

	proxy_buffer_size          4k;
	proxy_buffers              4 32k;
	proxy_busy_buffers_size    64k;
	proxy_temp_file_write_size 64k;

	proxy_set_header HTTPS "";
	proxy_hide_header X-Varnish;
	proxy_hide_header Via;

	# First attempt to serve request as file, then
	# as directory, then forwarding to the backend, then
	# forwarding to index.html, then
	# fall back to displaying a 404.
	try_files $uri @backend /index.php?$args /index.html =404;

	# Uncomment to enable naxsi on this location
	# include /etc/nginx/naxsi.rules
}

location ~ \.php {

	include fastcgi_params;
	fastcgi_index index.php;
	fastcgi_pass  unix:/var/run/php5-fpm.sock;
	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
}

location ~ /socket.io {

	proxy_pass http://nodejs;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "upgrade";
}

location ~ /docker {

	proxy_pass http://docker;
}

location ~ /phpmyadmin {

	root /usr/share/phpmyadmin;
	index index.php index.html index.htm;
}

# If you don't like seeing all the errors for missing favicon.ico in root.
# Serve an empty 1x1 gif _OR_ an error 204 (No Content) for favicon.ico
location = /favicon.ico {

	access_log off;
	log_not_found off;
	#empty_gif;
 	return 204;
 }

# If you don't like seeing errors for a missing robots.txt in root.
location = /robots.txt { access_log off; log_not_found off; }

# This will prevent files like .htaccess .htpassword .secret etc from being served
# You can remove the log directives if you wish to
# log any attempts at a client trying to access a hidden file.
location ~ /\. { deny all; access_log off; log_not_found off; }

location /download/ {

  	valid_referers  none  blocked  server_names  *.ahmed-kamal.com;

  	if ($invalid_referer) {
	    #rewrite   ^/   http://www.ahmed-kamal.com/;
	    return   403;
	}

	# rewrite_log  on;
	# rewrite /download/*/mp3/*.any_ext to /download/*/mp3/*.mp3
	rewrite ^/(download/.*)/mp3/(.*)\..*$ /$1/mp3/$2.mp3 break;

    root         /spool/www;
	autoindex    off;
	#access_log   /var/log/nginx/download.log  download;
}

## Restricted Access directory:
location ^~ /secure/ {

	allow 127.0.0.1/32;
	allow 10.10.10.0/24;
	deny all;
	auth_basic "RESTRICTED ACCESS";
	auth_basic_user_file /home/www/htdocs/secure/access_list;
}

location ~ ^/nginx-(status-ping)$ {

	# Copied from http://blog.kovyrin.net/2006/04/29/monitoring-nginx-with-rrdtool/
	stub_status on;
	access_log off;
	allow 127.0.0.1;
	deny all;
}

location ~ ^/apache-(status-ping)$ {

	proxy_pass http://localhost:8090/apache-status;

	access_log off;
	allow 127.0.0.1;
	deny all;
}
